#!/bin/bash

function cur_os {
	# Directly Check OSTYPE for OSX & Cygwin OS
	case "$OSTYPE" in
		darwin*) echo "osx"; return 0;;
		cygwin*) echo "cygwin"; return 0;;
	esac

	# Make sure we have /etc/issue
	if [[ ! -r '/etc/issue' ]]; then
		echo "/etc/issue isn't readable."
		exit 1
	fi

	DEB_OS=$(cat /etc/issue | sed 's/\(Ubuntu|Debian\).*/\1/')
	if [[ $DEB_OS != "" ]]; then
		echo "debian"
	else
		echo "unknown"
	fi
	return 0
}

echo -e "\e[0;32mLoading bootstrap resources...\e[0;m"
git clone git@github.com:uor/bootstrap.git _bootstrap
PWD="$(pwd)"
DIR="$(pwd)/_bootstrap"

echo -e "\e[0;32mInitializing the project...\e[0;m"
/usr/bin/env php $DIR/scripts/init_project.php $PWD $DIR

CUR_OS=$(cur_os)
case $CUR_OS in
	osx) $DIR/scripts/vm_osx.sh $DIR ;;
	debian) $DIR/scripts/vm_debian.sh $DIR ;;
	*)
		echo -e "\e[0;31mError: unsupported $CUR_OS\e[0;m"
		exit 1
	;;
esac

if [[ $? == 1 ]]; then
	exit 1
fi

echo "Cleaning up..."
rm -rf $DIR

echo -e "\e[0;32mYou may start the project by running \`vagrant up\` and browsing to http://localhost:8081 (port mapping can be changed in ./Vagrantfile).\e[0;m"

echo ""
read -rsn 1 -p "Press enter to launch the project now..." < /dev/tty
echo ""

vagrant destroy -f > /dev/null
vagrant up
open "http://localhost:8081"

echo ""